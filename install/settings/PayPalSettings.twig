

require_once __DIR__ . '/../../vendor/autoload.php';

use PayPal\Api\Amount;
use PayPal\Api\Payment;
use PayPal\Api\Transaction;
use PayPal\Api\RedirectUrls;

use PayPal\Rest\ApiContext;

class PayPalSettings extends Settings {

    public function __construct() {
        $this -> putSettings('PAYPAL_CLIENT_ID', '{{ attribute(post, 'form-paypal-client-id') }}');
        $this -> putSettings('PAYPAL_CLIENT_SECRET', '{{ attribute(post, 'form-paypal-client-secret') }}');
        $this -> putSettings('PAYPAL_CURRENCY', 'USD');
    }

    public function getPayPalClientID() {
        return $this -> getSettings('PAYPAL_CLIENT_ID');
    }

    public function getPayPalClientSecret() {
        return $this -> getSettings('PAYPAL_CLIENT_SECRET');
    }

    public function getPayPalCurrency() {
        return $this -> getSettings('PAYPAL_CURRENCY');
    }

    public function getPayPalAPIContext() {
        return new ApiContext(new \PayPal\Auth\OAuthTokenCredential($this -> getPayPalClientID(), $this -> getPayPalClientSecret()));
    }

    public function createApprovalLink($url, $type, $interval, $totalDays) {
        require_once __DIR__ . '/../../vendor/autoload.php';

        $adsky = AdSky::getInstance();

        $amount = new Amount();
        $amount -> setTotal(($type == Ad::TYPE_TITLE ? $adsky -> getAdSettings() -> getTitleAdCost() : $adsky -> getAdSettings() -> getChatAdCost()) * $interval * $totalDays);
        $amount -> setCurrency($adsky -> getPayPalSettings() -> getPayPalCurrency());

        $transaction = new Transaction();
        $transaction
            -> setAmount($amount)
            -> setDescription(sprintf($adsky -> getLanguageString('API_PAYPAL_ITEM'), $interval, ($type == Ad::TYPE_TITLE ? $adsky -> getLanguageString('AD_TYPE_TITLE') : $adsky -> getLanguageString('AD_TYPE_CHAT')), $totalDays));

        $redirectUrls = new RedirectUrls();
        $redirectUrls
            -> setReturnUrl($url . '&success=true')
            -> setCancelUrl($url . '&success=false');

        $payer = new PayPal\Api\Payer();
        $payer -> setPaymentMethod('paypal');

        $payment = new Payment();
        $payment
            -> setIntent('sale')
            -> setPayer($payer)
            -> setTransactions(array($transaction))
            -> setRedirectUrls($redirectUrls);

        return $payment -> create($this -> getPayPalAPIContext()) -> getApprovalLink();
    }

}